@model EmbeddedStock.Models.ShowTypesViewModel

@{
    ViewBag.Title = "Show Types";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Show Types</h2>

@Html.Partial("ComponentMenu")

<div class="col-md-12">
    <br />
    <br />
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Type.ComponentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type.SerialNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type.ComponentInfo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type.DataSheet)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type.ManufacturerLink)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type.ImageByte)
            </th>
            <th>
                
            </th>
            <th>

            </th>
            <th>

            </th>
            <th>

            </th>
        </tr>
        @for (int i = 0; i < Model.Types.Count(); i++)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => Model.Types[i].ComponentName)
                </td>
                <td>
                    @Html.DisplayFor(model => Model.Types[i].SerialNumber)
                </td>
                <td>
                    @Html.DisplayFor(model => Model.Types[i].ComponentInfo)
                </td>
                <td>
                    @Html.DisplayFor(model => Model.Types[i].DataSheet)
                </td>
                <td>
                    @Html.DisplayFor(model => Model.Types[i].ManufacturerLink)
                </td>
                <td>
                    @Html.DisplayFor(model => Model.Types[i].Category.Name)
                </td>
                <td>
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#@("modal" + i)">
                        Show
                    </button>

                    <!-- Modal -->
                    <!-- Id's of the modal and the image have to be different, otherwise they will be treated as the same-->
                    <div class="modal fade" id="@("modal" + i)" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    <h4 class="modal-title" id="myModalLabel">Component Image</h4>
                                </div>
                                <div class="modal-body">
                                    <img id="@("img" + i)" width="400" height="300" src="data:image;base64,@System.Convert.ToBase64String(Model.Types[i].ImageByte)" />
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td></td>

                <td>
                    <a href="@Url.Action("EditType", new{id = Model.Types[i].Id})" class="btn btn-warning">Edit</a>
                </td>
                    
                <td>
                    @using (Html.BeginForm("DeleteType", "Component", FormMethod.Post))
                    {
                        <input type="hidden" value="@Model.Types[i].Id" name="Id" />
                                <input type="submit" class="btn btn-danger" value="Delete" onclick="return confirm('Delete component type? This will also delete all components of that type');">
                    }
                </td>
                <td></td>
            </tr>
        }
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>

            <td colspan="3">
                <div class="pull-right">
                    @{
                            @Html.PageLinks(Model.PagingInfo, x => Url.Action("ShowTypes", new { page = x }))
                    }
                   
                </div>
            </td>
        </tr>

    </table>

</div>

